<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.blogssm.mapper.CommentMapper">
    <insert id="AddComment">
        insert into commentinfo(uid, aid, content, likes, state, comment_id
        <if test="reply_id != null">, reply_id</if>
        <if test="root_id != null">, root_id</if>)
        values
        (#{uid}, #{aid}, #{content}, #{likes}, #{state}, #{comment_id}
        <if test="reply_id != null">, #{reply_id}</if>
        <if test="root_id != null">, #{root_id}</if>)
    </insert>
    <select id="getCommentList" resultType="com.example.blogssm.entity.vo.CommentinfoVO">
    <![CDATA[
        -- 获取指定文章的所有根评论
        (SELECT c.*, NULL as rn, u.avater, u.username, u.address FROM commentinfo c JOIN userinfo u ON c.uid = u.id WHERE c.root_id IS NULL AND c.reply_id IS NULL AND c.aid = #{aid} ORDER BY c.createtime)

        UNION ALL

        -- 获取每个根评论下的前三条子评论
        (SELECT * FROM (
                           SELECT c.*, ROW_NUMBER() OVER (PARTITION BY c.root_id ORDER BY c.createtime) as rn, u.avater, u.username, u.address
                           FROM commentinfo c JOIN userinfo u ON c.uid = u.id
                           WHERE c.root_id IS NOT NULL AND c.aid = #{aid}
                       ) sub
         WHERE rn <= 3)
        ORDER BY createtime;
        ]]>
    </select>
    <select id="getCommentIDListById" resultType="java.lang.String">
select comment_id from commentinfo where aid =#{aid} and uid =#{uid}
    </select>
    <delete id="deleteCommentById">
        delete from commentinfo where comment_id =#{comment_id}
    </delete>
</mapper>
